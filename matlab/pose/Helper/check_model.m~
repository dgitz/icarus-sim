function [result] = check_model(model_name)
block_definition{1}.name = 'TimeCompensate';
block_definition{1}.max_count = 30;
result = 0;
if((strcmp(model_name,'Pose_AutoCode')) || (strcmp(model_name,'PoseExecutor')))
else
    disp(['[ERROR]: Model: ' model_name ' Is Not Supported.']);
    return;
end
if(bdIsLoaded(model_name) == 0)
    open_system(model_name)
end
if(bdIsLoaded(model_name) == 0)
    disp(['[ERROR]: Unable to open Model: ' model_name ]);
    return;
end
system_listing = find_system(model_name,'LookUnderMasks', 'on', 'FollowLinks', 'on','Virtual','off');
top_level_blocks = [];
for i = 1:length(system_listing)
    item = char(system_listing(i));    
    if(count(item,'/') == 2)  % Top Level
        top_level_blocks{length(top_level_blocks)+1} = item;
    end
end
all_checks_ok = 1;
for i = 1:length(top_level_blocks)
    found = 0;
    for j = 1:length(block_definition)
        if(strcmp(top_level_blocks{i},block_definition{j}.name) == 1)
            found = 1;
            count = length(find_system(top_level_blocks, 'LookUnderMasks', 'on', 'FollowLinks', 'on','Virtual','off'));
        end
    end
    if(found == 0)
        all_checks_ok = 0;
        disp(['[ERROR]: Model: ' model_name ' has a Top Level Block: ' top_level_blocks{i} ' That is Not Supported.']);
    end
end
if(result == 0)
    disp(['[ERROR]: Model:' model_name ' violates build constraints.']);
end
if(all_checks_ok == 1)
    disp(['[INFO]: Model: ' model_name ' appears Valid!']);
end

end

